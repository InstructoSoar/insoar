sp {propose*querySmemForObject
(state <s> ^type state
		^world.objects.object <obj>)
(<obj> -^retrieved <ret>)
-->
(<s> ^operator <o> + =)
(<o> ^name query-smem-for-object
	 ^object <obj>)
}

#queries for the effect (one object with a predicate)
sp {apply*querySmemForObject
(state <s> ^type state
		^operator <o>
		^smem.command <smemCmd>
		^world.objects.object <obj>)
(<obj> ^root-category <root-cat>)
(<o> ^name query-smem-for-object
	 ^object <obj>)
-->
(<smemCmd> ^query <effect>)
(<effect> ^category <root-cat>)	
}


#propose move result
sp {propose*operator*move_results_object
(state <s> ^type state
			^smem.result.success <succ>
			^smem.command.query <qr>)
-->
(<s> ^operator <o> + > =)
(<o> ^name move_results)
}

sp {apply*operator*move_results_object
(state <s> ^type state
			^operator <o>
			^smem.command <cmd>
			^smem.result.retrieved <objLTI>
			^world.objects.object <obj>)
(<o> ^name move_results)
(<cmd> ^query <elem>)
(<obj> ^root-category <root-category>)
(<objLTI> ^category <root-category>)
-->
(<obj> ^retrieved <objLTI>)
(<cmd> ^query <elem> -)
}