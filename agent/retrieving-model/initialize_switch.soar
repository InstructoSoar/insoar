sp {propose*initialize-EMA
(state <s> ^type state
			^superstate nil 
          -^name EMA)
-->
(<s> ^operator <o> +)
(<o> ^name init-EMA)
}

sp {apply*initialize-EMA
(state <s> ^operator <o>)
	(<o> ^name init-EMA)
-->
(<s> ^name EMA
	^role <role>
	^iox <iox>
	^world <world>
	^goal <gl>
	^model-template <lti2>)
(<gl> ^task <tsIO>
	^type original)
(<tsIO> ^name turn-on-light
 	^finished false
 	^original <x>)
(<x> ^arg1 <objIO>
	^predicate <predGoal>
	^type objRelation)
(<objIO> ^arg-type object
	^id.category lamp)
(<predGoal> ^name activation
	^value on)

(<iox> ^sentence.if.you.want.the.lamp.activation.on.a.precondition.is.that.the.lamp.is.connected.to.the.switch.then.op_flip_switch.and.flip_switch.leads.to.lamp.activation.on.end <node>)

# (<in> ^goal.task <ts>)
# (<ts> ^name prepare-room
# 	^finished false)
# (<in> ^goal <gl>)
# (<gl> ^task <tsIO>
# 	  ^type original)
# (<tsIO> ^name turn-on-light
#  	  ^finished false
#  	  ^original <x>)
# (<x> ^object <objIO>)
# (<objIO> ^predicates.activation on
# 	   ^category lamp)
(<world> ^objects <objs>
		^predicates <pred>)
(<objs> ^object <lighSwitObj>
		^object <lightFixtureObj>
		# ^object <door>
		#^object <microwave>
		)
# (<microwave> ^handle microwave ^item-type object ^perception-id microwave1
#        ^predicates <N2> ^root-category microwave)
# (<N2> ^activation off ^category entity1 ^category object ^category microwave
#          ^is-reachable1 reachable ^is-visible visible)
# (<door> ^handle door ^item-type object ^perception-id door
#        ^predicates <N4> ^root-category door)
# (<N4> ^state closed ^category object ^category door ^is-reachable reachable
#          ^is-visible1 visible1)
(<lighSwitObj> ^handle lightswitch ^item-type object ^perception-id lightswitch1_1
       ^predicates <N3> ^root-category switch)
(<N3> ^activation off ^affordance1 activatable1 ^category entity1
         ^category object ^category switch ^is-reachable reachable
         ^is-visible1 visible1 ^category trigger)
(<lightFixtureObj> ^handle lightFixture ^item-type object ^perception-id light1_1
       ^predicates <N11> ^root-category lamp)
(<N11> ^activation off ^category entity1 ^category object ^category lamp
         ^is-reachable1 not-reachable ^is-visible visible ^category lightFixture)
#(<pred> ^predicate <pred1>)
#(<pred1> ^name plugged-in ^instance <in>)
#(<in> ^1 <lighSwitObj> ^2 <lightFixtureObj>)
(write |EMA is Initialized|)
#--------------------------------MODEL TEMPLATE-----------------#
(<lti2> ^model <Model>)
(<Model> ^model-name Learned-Model
 	^participants <partic>
	^preconditions <preCon>
	^causes <causes>
	^effects <effects>)
#participants
(<partic> ^participant <par1>)
(<par1> ^handle PAR1HANDLE
		^category PAR1CATEGORY
		^1 <ran>)

(<partic> ^participant <par2>)
(<par2> ^handle PAR2HANDLE
		^category PAR2CATEGORY
		^2 <ran1>)

#preconditons 
(<preCon> ^precondition <pre1>)
(<pre1> ^type objObjRelation
	    ^predicates <predsPre>
	    ^object <obj1>
	    ^object <obj2>)
(<obj1> ^category PAR1CATEGORY)
(<obj2> ^category PAR2CATEGORY)
(<predsPre> ^predicate <predPre>)
(<predPre> ^name PRECONDPREDNAME
			^instance <inst>)
(<inst> ^1 <one>
		^2 <two>)
(<one> ^grounded <par2>)
(<two> ^grounded <par1>)

#causes
(<causes> ^cause <cs2>)
(<cs2>  ^task-operator <2tsk>
		^object <2obj1>)
(<2obj1> ^participant <par1>)
(<2tsk>	^name OPERATORNAME
		^item-type task-operator
		^task-handle TASKHANDLE
		^perform multiple
		^arg1 <2arg1>)
(<2arg1> ^arg-type object
		^id <par1>)

#effects
(<effects> ^effect <ef1>)
(<ef1> ^id 1
	 ^model-reference <Model>
 	 ^participant <par2>
 	 ^participant-category PAR2CATEGORY
	 ^pred-name EFFECTSPREDNAME
	 ^pred-value EFFECTSPREDVALUE)	


}
