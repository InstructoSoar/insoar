sp {elaborate*moveGoal
(state <s1> ^type state
		^superstate <s>
		^impasse 
		^attribute operator)
(<s> ^name EMA
	^goal <gl>)
-->
(<s1> ^goal <gl>
	^model <md>)
(<md> ^preconditions false
	  ^cause false)
}

sp {elaborate*copyWorld
(state <s1> ^type state
		^superstate <s>)
(<s> ^name EMA
	^world <world>)
-->
(<s1> ^world <world>)
}

#ground participants
sp {elaborate*ground*participants 
(state <s1> ^type state
		^superstate <s>
		^model.retrieved.participants.participant <partic>
		^world <world>)
(<s> ^name EMA)
(<partic> ^root-category <cat>)
(<world> ^objects.object <obj>)
(<obj> ^root-category <cat>)
-->
(<obj> ^grounded <partic>)
}

# #match pre-condition of an object some pred another object
sp {elaborate*match*precondition 
(state <s1> ^type state
		^superstate <s>
		^model <md>
		^world <world>)
(<s> ^name EMA)
(<world> ^objects <objects>)
(<objects> ^object.grounded <partic1>
		   ^object.grounded <partic2>)
#matching the precondition in the model
(<md> ^retrieved.preconditions.precondition <prcon>)
(<prcon> ^type objObjRelation
	     ^predicate <pred>)
(<pred> ^name <name>
		^value <partic2>
		^value <partic1>)
#matching values in the world
(<world> ^predicates.predicate <pred1>)
(<pred1> ^name <name>
		^instance <inst>)
(<inst> ^1.grounded <partic1>
		^2.grounded <partic2>)
-->
(<md> ^preconditions true)
(<md> ^preconditions false -)
}

#give preference to cause
sp {elaborate*match*cause
(state <s1> ^type state
		^superstate <s>
		^model <md>
		^item <o>)
(<md> ^retrieved.causes.cause <cause>)
(<cause> ^object <obj>)
(<obj> ^participant <part>
		^predicate <pred>)
(<pred> ^name <predName>
	^value <predVal>)
(<o> ^predicateName <predName>
	^predicateValue <predVal>)
-->
(<s> ^operator <o> >)
}






















