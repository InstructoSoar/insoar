sp {retrieve-model*propose*ground-cause*arg1
(state <s1> ^model.retrieved <md>
		^world <world>
		^name retrieve-model
		^name task-state-no-change)
(<s1> ^model.preconditions true)
(<md> ^participants.participant <partic>
	  ^causes.cause <cause>)
(<cause> ^object.participant <partic>
	     ^task-operator.arg1 <arg>)
(<arg> ^temp-id.category <root-cat>)
(<world> ^objects.object <obj>)
(<obj> ^predicates.category <root-cat>)
-->
(<s1> ^operator <o> + = >)
(<o> ^name ground-cause
	 ^object <obj>
	 ^type arg1)
}

sp {retrieve-model*propose*ground-cause*arg2
(state <s1> ^model.retrieved <md>
		^world <world>
		^name retrieve-model
		^name task-state-no-change)
(<s1> ^model.preconditions true)
(<md> ^participants.participant <partic>
	  ^causes.cause <cause>)
(<cause> ^object.participant <partic>
	     ^task-operator.arg2 <arg>
	     -^task-operator.arg1.temp-id <x>)
(<arg> ^temp-2.category <root-cat>)
(<world> ^objects.object <obj>)
(<obj> ^predicates.category <root-cat>)
-->
(<s1> ^operator <o> + = >)
(<o> ^name ground-cause
	 ^object <obj>
	 ^type arg2)
}

sp {retrieve-model*prefer*match*over*goal
(state <s1> ^operator <o1> +
	        ^operator <o2> +
	        ^name retrieve-model
	        ^name task-state-no-change)
(<o1> ^name ground-cause)
(<o2> ^name search-for-next-subtask)
-->
(<s1> ^operator <o1> > <o2>)
}

sp {retrieve-model*apply*ground-cause*arg1
(state <s1> ^model.retrieved <md>
		^name retrieve-model
		^name task-state-no-change
		^operator <o>)
(<o> ^name ground-cause
	 ^object <obj>
	 ^type arg1)
(<md> ^participants.participant <partic>
	  ^causes.cause <cause>)
(<cause> ^object.participant <partic>
	     ^task-operator.arg1 <tsk>)
(<tsk> ^temp-id <arg>)
-->
(<tsk> ^id <obj>
	   ^temp-id <arg> -)
}
sp {retrieve-model*apply*ground-cause*arg2
(state <s1> ^model.retrieved <md>
		^name retrieve-model
		^name task-state-no-change
		^operator <o>)
(<o> ^name ground-cause
	 ^object <obj>
	 ^type arg2)
(<md> ^participants.participant <partic>
	  ^causes.cause <cause>)
(<cause> ^object.participant <partic>
	     ^task-operator.arg2 <arg2>)
(<arg2> ^temp-2 <temp2>)
-->
(<arg2> ^2 <obj>
	   ^temp-2 <temp2> -)

}


sp {retrieve-model*propose*create*operator
(state <s> ^model <md>
 		   ^name retrieve-model
 		   ^name task-state-no-change
 		   ^superstate <s1>)
 (<md> ^preconditions true
       ^retrieved.causes.cause.task-operator <tskOp>)
(<tskOp> -^arg1.temp-id <arg>
		-^arg2.temp-2 <arg2>)
-->
(<s1> ^operator <tskOp> + = >
	  ^retrieved-model true)
}

# #retract the old operator 
# sp {elaborate*OpNoChangeRemoveOldOp
# (state <s1> ^type state
# 		^superstate <s>
# 		^impasse no-change
# 		^attribute operator
# 		^flag retrieve-model)
# (<s> ^operator <o>)
# (<s> ^operator <o1> +)
# (<o> ^item-type task-operator
#      ^name <oName>)
# (<o1> ^name { <> <oName> <o1Name> })
# -->
# (<s> ^operator <o> < <o1> )
# }






