sp {game-search*elaborate*problem-space
   (state <s> ^name game-search)
           #  -^superstate.name learn-param)
-->
   (<s> ^problem-space <p>
        ^ntype action goal
        ^gtype action)
  #      ^action <act>
 #       ^goal <go>)
   (<p> ^name action
        ^default-state-copy yes
        ^one-level-attributes depth-limit
        ^two-level-attributes objects list )
#   (<act> ^parameter-set <ps>
#        ^potential-args <po>)
#   (<go> ^parameter-set <ps2>
#        ^potential-args <po2>)
}
sp {game-search*elaborate*operator
   (state <s> ^name game-search
              ^superstate.operator <o>)
   (<o> ^name game-search
        ^objects <objs>
        ^dcount <dc>
        ^depth-limit <dl>
        ^list <l>
        ^current <g> 
        ^game <name>)
-->
   (<s> ^objects <objs>
        ^dcount <dc>
        ^depth-limit <dl>
        ^list <l>
        ^desired <d>
        ^current <g> 
        ^game <name>)
   (<d> ^found true)
}
sp {game-search*elaborate*goal #for not only at depth
   (state <s> ^name game-search)
             # ^dcount <dc>
              #^depth-limit <dc>)
-->
   (<s> ^gtype goal)
}
              
sp {game-search*elaborate*multiplayer
   (state <s> ^name game-search
              ^superstate.superstate.multiplayer <m>)
-->
   (<s> ^multiplayer <m>)
}

sp {game-search*elaborate*prepositions
   (state <s> ^name game-search
              ^superstate.superstate.prepositions <p>)
-->
   (<s> ^prepositions <p2>)
}

sp {game-search*elaborate*dcount
   (state <s> ^name game-search
              ^superstate.superstate.dcount <dc>)
-->
   (<s> ^dcount (+ 1 <dc>))
}

sp {game-search*elaborate*prepositions*prep
   (state <s> ^name game-search
              ^prepositions <p2>
              ^superstate.superstate.prepositions.prep <prep>)
   (<prep> ^name <name>)
-->
   (<p2> ^prep <prep1>)
   (<prep1> ^name <name>)
}

sp {game-search*elaborate*prepositions*pair
   (state <s> ^name game-search
              ^prepositions.prep <p2>
              ^superstate.superstate.prepositions.prep <prep>)
   (<prep> ^name <name> ^pair <pair>)
   (<p2> ^name <name>)
-->
   (<p2> ^pair <pair>)
}

sp {game-search*apply*simulate
   (state <s> ^name game-search
              ^action <act>
              ^prepositions <p2>
              ^operator <o>)
   (<act> ^parameter-set.verbs <v> ^name <cname>)
   (<o> ^name action
        ^cname <cname>
     #   ^game << towers-of-hanoi tic-tac-toe eight-puzzle tic-tac-toe-stored >>
        ^parameters <p>)
   (<p2> ^prep <prep> ^prep <prep2>)
   (<prep> ^name below ^pair <pair>)
   (<pair> ^b <obj>)
   (<prep2> ^name on ^pair <pair2>)
   (<pair2> ^a <obj>)
   (<p> ^<i1> <obj> ^<i2> <obj1>)
   (<v> ^1 <v1>)#for now only handle 1 verb actions
   (<v1> ^verb-prep on ^{<a1> 1} <i1> ^{<a2> 2} <i2>)
   
-->
   (<prep> ^pair <pair> -
           ^pair <pair3>)
   (<prep2> ^pair <pair2> -
            ^pair <pair4>)
   (<pair3> ^a <obj1> ^b <obj>)
   (<pair4> ^a <obj> ^b <obj1>)
}
sp {game-search*apply*simulate2
   (state <s> ^name game-search
              ^action <act>
              ^prepositions <p2>
              ^operator <o>)
   (<act> ^parameter-set.verbs <v> ^name <cname>)
   (<o> ^name action
        ^cname <cname>
     #   ^game << towers-of-hanoi tic-tac-toe eight-puzzle tic-tac-toe-stored >>
        ^parameters <p>)
   (<p2> ^prep <prep> ^prep <prep2>)
   (<prep> ^name below -^pair.b <obj>)
   (<prep2> ^name on -^pair.a <obj>)
   (<p> ^<i1> <obj> ^<i2> <obj1>)
   (<v> ^1 <v1>)#for now only handle 1 verb actions
   (<v1> ^verb-prep on ^{<a1> 1} <i1> ^{<a2> 2} <i2>)
-->
   (<prep> ^pair <pair3>)
   (<prep2> ^pair <pair4>)
   (<pair3> ^a <obj1> ^b <obj>)
   (<pair4> ^a <obj> ^b <obj1>)
}

sp {game-search*elaborate*gtypes
   (state <s> ^name game-search
              ^ntype <type>
              ^superstate.superstate.<type> <a>)
-->
   (<s> ^<type> <b>)
   (<b> ^parameter-set <ps2> ^copy-of <a>
        ^potential-args <po2>)
}

sp {game-search*elaborate*condition
   (state <s> ^name game-search
              ^ntype <type>
              ^<type> <t>
              ^superstate.superstate.<type> <t2>)
   (<t2> ^condition <co>)
   (<t> ^copy-of <t2>)
   (<co> ^name <name> ^parameter <p> ^negative <neg> ^rtype <rt>)
-->
   (<t> ^condition <c>)
   (<c> ^name <name> ^parameter <p> ^duplicate-of <co> ^negative <neg> ^rtype <rt>)
}
sp {game-search*propose*started
   (state <s> ^name game-search
              ^dcount 0
              ^ntype <type>
              ^<type>.condition <co>)
    (<co> -^args)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name started)
}
sp {game-search*elaborate*condition*args2
   (state <s> ^name game-search
              ^ntype <type>  
              ^<type> <t>
              ^operator <oper>)#.name action)
   (<t> ^condition <c>
        ^condition <c1>
        ^condition <c2>)
   (<c>  ^duplicate-of <co1> -^args)
   (<co1> ^args <args> ^parameter.result.link.link.<s1>.<i2>.<o1> holder)
   (<args> ^num 2 ^1 <co2> ^2 <co3>)
   (<c1> ^duplicate-of <co2>)
   (<c2> ^duplicate-of <co3>)
-->
   (<c> ^args <args3> ^result.<s1>.<i2> <i>)
   (<args3> ^num 2 ^1 <c1> ^2 <c2>)
}
sp {game-search*elaborate*condition*args3
   (state <s> ^name game-search
              ^ntype <type>  
              ^<type> <t>
              ^operator <oper>)#.name action)
   (<t> ^condition <c>
        ^condition <c1>
        ^condition <c2>
        ^condition <c3>)
   (<c> ^duplicate-of <co1> -^args)
   (<co1> ^args <args> ^parameter.result.link.link.<s1>.<i2>.<o1> holder)
   (<args> ^num 3 ^1 <co2> ^2 <co3> ^3 <co4>)
   (<c1> ^duplicate-of <co2>)
   (<c2> ^duplicate-of <co3>)
   (<c3> ^duplicate-of <co4>)
-->
   (<c> ^args <args3> ^result.<s1>.<i2> <i>)
   (<args3> ^num 3 ^1 <c1> ^2 <c2> ^3 <c3>)
}
sp {game-search*elaborate*condition*args1
   (state <s> ^name game-search
              ^ntype <type>  
              ^<type> <t>
              ^operator <oper>)#.name action)
   (<t> ^condition <c>
        ^condition <c1>)
   (<c> ^duplicate-of <co1> -^args)
   (<co1> ^args <args> ^parameter.result.link.link.<s1>.<i2>.<o1> holder)
   (<args> ^num 1 ^1 <co2>)
   (<c1> ^duplicate-of <co2>)
-->
   (<c> ^args <args3> ^result.<s1>.<i2> <i>)
   (<args3> ^num 1 ^1 <c1>)
}
sp {game-search*elaborate*condition*noargs
   (state <s> ^name game-search
              ^ntype <type>  
              ^<type> <t>
              ^operator <oper>)#.name action)
   (<t> ^condition <c>)
   (<c> ^duplicate-of <co1> -^args)
   (<co1> ^args <args> ^parameter.result.link.link.<s1>.<i2>.<o1> holder)
   (<args> -^num)
-->
   (<c> ^args <args3> ^result.<s1>.<i2> <i>)
}


sp {game-search*elaborate*parameter-set*argnum
   (state <s> ^name game-search
              ^ntype <type>
              ^superstate.superstate.<type> <t2> 
              ^<type> <t> )
    (<t2> ^parameter-set.argnum <num>)
	(<t> ^parameter-set <ps> ^copy-of <t2>)
-->
   (<ps> ^argnum <num>)
}

sp {game-search*elaborate*parameter-set*name
   (state <s> ^name game-search
              ^ntype <type>
              ^superstate.superstate.<type> <t2> 
              ^<type> <t> )
    (<t2> ^name <name>)
	(<t> ^copy-of <t2>)
-->
   (<t> ^name <name>)
}
sp {game-search*elaborate*parameter-set*verbs
   (state <s> ^name game-search
              ^gtype <type>
              ^superstate.superstate.<type> <t2> 
              ^<type> <t> )
    (<t2> ^parameter-set.verbs <v>)
	(<t> ^parameter-set <ps> ^copy-of <t2>)
-->
   (<ps> ^verbs <v>)
}
sp {game-search*apply*action-success
   (state <s> ^name game-search
              ^desired <d>
              ^operator <o>)
   (<o> ^name action -^duplicate-of)
-->
   (<s> ^success <d>)
}
sp {game-search*apply*action*flound-action
   (state <s> ^name game-search
              ^topstate <ts>
              ^dcount <dc>
             -^multiplayer true
             -^dcount 0
              ^action <act>
              ^operator <o>)
   (<o> ^name action -^duplicate-of ^parameters <p> ^cname <cname>)
   (<act> ^parameter-set.verbs <v> ^name <cname>)
   (<p> ^<i1> <o1> ^<i2> <o2>)
   (<o1> ^id <oa>)
   (<o2> ^id <ob>)
   (<v> ^1 <v1>)#for now only handle 1 verb actions
   (<v1> ^verb-prep <vp> ^verb-name <vname> ^{<a1> 1} <i1> ^{<a2> 2} <i2>)
-->
   (<ts> ^flound-action <fa>)
   (<fa> ^dcount <dc> ^obj1 <oa> ^obj2 <ob> ^pname <vp>)#(+ (* <dc> 4) <varg>) 
}

sp {game-search*apply*action*flound-action*top
   (state <s> ^name game-search
              ^topstate <ts>
              ^superstate.superstate.superstate <sss>
              ^dcount 0
              ^action <act>
              ^operator <o>)
   (<o> ^name action -^duplicate-of ^parameters <p> ^cname <cname>)
   (<act> ^parameter-set.verbs <v> ^name <cname>)
   (<p> ^<i1> <o1> ^<i2> <o2>)
   (<o1> ^id <oa>)
   (<o2> ^id <ob>)
   (<v> ^1 <v1>)#for now only handle 1 verb actions
   (<v1> ^verb-prep <vp> ^verb-name <vname> ^{<a1> 1} <i1> ^{<a2> 2} <i2>)
-->
   (<sss> ^valid-arg.<a1> <oa>
         ^valid-arg.<a2> <ob>
         ^action <a>)
   (<a> ^verb <vname> ^pname <vp>)
   (<ts> ^flound-action <fa>)
   (<fa> ^dcount 0 ^obj1 <oa> ^obj2 <ob> ^mark done ^pname <vp>)
}

sp {game-search*apply*goal
   (state <s> ^name game-search
              ^desired <d>
              ^operator.name goal)
-->
 #  (interrupt)
   (<s> ^success <d>)
}
sp {game-search*depth-limit
   (state <s> ^name game-search
              ^desired <d>
              ^operator <o> +
             -^goal.parameter-set.set
              ^action <act>
              ^dcount <dc>
              ^depth-limit <dc>)
   (<o> -^duplicate-of ^name action ^cname <cname>)
   (<act> ^parameter-set.set ^name <cname>)
 -{(<s> ^operator <o2> +)
   (<o2> ^name goal)}
-->
   (<s> ^partial-failure <d>)
}
sp {game-search*prefer*goal
   (state <s> ^name game-search
              ^operator <o1> +)
   (<o1> ^name goal)
-->
   (<s> ^operator <o1> > =)
}
sp {game-search*heuristic*reject
   (state <s> ^name game-search
              ^superstate.operator.superoperator.parameters <p2>
              ^action <act>
              ^operator <o> +)
   (<act> ^name <cname> ^parameter-set.verbs.{1}.{1} <ind>)
   (<o> ^name action -^duplicate-of ^parameters <p> ^cname <cname>)
   (<p> ^<ind> <obj1>)
   (<p2> ^<ind> <obj1>)
-->
   (<s> ^operator <o> -)
}
sp {game-search*propose*default
   (state <s> ^name game-search)
   -{(<s> ^action <a>)
     (<a> -^parameter-set.argnum)}
-->
   (<s> ^operator <o1> +)
   (<o1> ^name default)
}

sp {game-search*apply*default
   (state <s> ^name game-search
              ^desired <d>
             -^dcount 0
              ^operator.name default)
-->
   (<s> ^partial-failure <d>)
}

##here should bump depth-limit if puzzle
#sp {game-search*apply*default*top-select-random-action
#   (state <s> ^name game-search
#              ^operator <o> +
#              ^dcount 0
#              ^operator.name default)
#   (<o> ^name action)
# #  -{(<s> ^operator {<o2> > <o>})}
#-->
#   (interrupt)
#   (<s> ^operator <o> > =)
#}
sp {game-search*apply*default*depth-limit-increase
   (state <s> ^name game-search
 #             ^operator <o> +
              ^dcount 0
              ^superstate <ss>
         #     ^depth-limit <d>
              ^operator.name default)
   (<ss> ^depth-limit <d>)
#   (<o> ^name action)
 #  -{(<s> ^operator {<o2> > <o>})}
-->
 #  (interrupt)
   (<ss> ^depth-limit <d> -)
   (<ss> ^depth-limit (+ <d> 1))

   }

sp {selection*prefer*evaluate*action*over*default
   (state <s> ^name selection
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name evaluate-operator ^superoperator.name action)
   (<o2> ^name evaluate-operator ^superoperator.name default)
-->
   (<s> ^operator <o1> > <o2>)
}