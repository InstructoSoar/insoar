### create copy of the desired attribute when in the learning problemspace
sp {composite-action*elaborate*not-id*propose*generate*copy
   (state <s> ^problemspace <ps>
	      -^name generate-desired-copy
	      ^superstate.operator.desired { <d> <> unknown }
	      -^desired)
   (<ps> ^action.category composite)
-->
   (<s> ^operator <op> + !)
   (<op> ^name generate-desired-copy
   	 ^ndesired <d>)
}

sp {composite-action*no-goal*propose*record-initial-state
   (state <s> ^problemspace <ps>
             -^name generate-desired-copy
              ^superstate.operator.desired unknown
             -^recorded-state true)
   (<ps> ^action.category composite)
-->
   (<s> ^operator <o> + !)
   (<o> ^name extract-state)
}

### propose assign-action-space if there is no action-space
sp {composite-action*propose*assign-action-space
   (state <s> ^problemspace <ps>
	      -^indexed-action <any>
	      ^action-space-id <aid>
	      ^desired <d>
	      ^procedural-id <pid>)
   (<act> -^type none
   	  ^category composite)
   (<ps> ^action <act>
   	 ^state <st>)
#   (<st> -^type << hypothetical real >>)
-->
   (<s> ^operator <op> + !)   
   (<op> ^name assign-action-space
   	 ^action-space-id <aid>
	 ^procedural-id <pid>)
}

### if action-space-operators exist, propose them
# sp {composite-action*propose*action-space-operators
#    (state <s> ^problemspace.action <act>
# 	      ^desired <d>
# 	      ^action-space-operator {<op> <> failure}
# 	      -^applied <op>)
#    (<act> ^type << execute project >>
#    	  ^category composite)
# -->
#    (<s> ^operator <op> +)   
# }



