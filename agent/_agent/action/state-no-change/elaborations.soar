### this state-no-change occurs multiple times, in a the action, goal-elaboration, and retrospective learning problemspace. the state name is elaborated accordingly

# IROS: Don't need desired to propose action
sp {elaborate*indexed-action*state-no-change*known*desired
   (state <s> ^attribute state
   	      ^choices none
	      ^superstate <ss>)
   (<ss> ^indexed-action <ia>
   	 ^name action)
   (<ia> ^desired)
-->
   (<s> ^name learn-proposal-rule)
}

sp {elaborate*indexed-action*state-no-change*unknown*desired
   (state <s> ^attribute state
   	      ^choices none
	      ^superstate <ss>
	      -^name learn-proposal-rule)
   (<ss> ^indexed-action <ia>
   	 ^name action)
-->
   (<s> ^name learn-desired-elaboration-rule)
}


### elaborate problemspace
sp {elaborate*indexed-action*state-no-change*problemspace
   (state <s> ^name << learn-desired-elaboration-rule learn-proposal-rule >>
   	      ^problemspace <ps>)
-->
   (<ps> ^action <act>
   	 ^learning <l>
	 ^state <st>)
}


sp {elaborate*indexed-action*state-no-change*problemspace*learning
   (state <s> ^name << learn-desired-elaboration-rule learn-proposal-rule >>
   	      ^problemspace.learning <l>
	      ^superstate.problemspace.learning.type <type>)
-->
   (<l> ^type <type>)
}

sp {elaborate*indexed-action*state-no-change*problemspace*state
   (state <s> ^name << learn-desired-elaboration-rule learn-proposal-rule >>
   	      ^problemspace.state <st>
	      ^superstate.problemspace.state.type <type>)
-->
   (<st> ^type <type>)
}

sp {elaborate*indexed-action*state-no-change*problemspace*action
   (state <s> ^name << learn-desired-elaboration-rule  >>
   	      ^problemspace.action <st>
	      ^superstate.problemspace.action.type <type>)
-->
   (<st> ^type <type>)
}

sp {elaborate*indexed-action*state-no-change*problemspace*action*learn-proposal-rule
   (state <s> ^name << learn-proposal-rule  >>
   	      ^problemspace.action <st>
	      ^superstate.problemspace.action.type <type>)
-->
   (<st> ^type project)
}


