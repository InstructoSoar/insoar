sp {topstate*get-next-subaction*learning-goal*propose*extract-state
   (state <s> ^topstate <s>
              ^interaction.stack.segment <seg>)
   (<seg> ^purpose.type get-next-subaction
          ^info <info>
          ^next.purpose.type action-command)
   (<info> -^current-state)
-->
   (<s> ^operator <o> + >)
   (<o> ^name extract-state)
}

sp {topstate*get-next-subaction*apply*extract-state*copy-result
   (state <s> ^topstate <s> 
              ^operator.name extract-state
              ^state-result <res>
              ^interaction.stack.segment <seg>)
   (<seg> ^purpose.type get-next-subaction
          ^info <info>)
-->
   (<info> ^current-state <res>)
   (<s> ^state-result <res> -)
}

sp {topstate*get-next-subaction*propose*state-union
   (state <s> ^topstate <s>
              ^interaction.stack.segment <seg>)
   (<seg> ^purpose.type get-next-subaction
          ^info <info>
          ^next.purpose.type action-command
          ^next.info.unchanged-state <unchanged>)
   (<info> ^current-state <current>
          -^updated-unchanged)
-->
   (<s> ^operator <o> + >)
   (<o> ^name state-union
        ^initial <unchanged>
        ^final <current>)
}

sp {topstate*get-next-subaction*apply*state-union*copy*result
   (state <s> ^topstate <s>
              ^operator.name state-union
              ^interaction.stack.segment <seg>
              ^state-result <res>)
   (<seg> ^purpose.type get-next-subaction
          ^info <info>
          ^next.info <prev-seg-info>)
   (<prev-seg-info> ^unchanged-state <old-unchanged>)
-->
   (<prev-seg-info> ^unchanged-state <old-unchanged> -
                    ^unchanged-state <res>)
   (<s> ^state-result <res> -)
   (<info> ^updated-unchanged true)
}